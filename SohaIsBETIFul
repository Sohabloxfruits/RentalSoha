-- Load Kavo UI Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()

-- Define Colors for Custom Theme
local defaultColors = {
    SchemeColor = Color3.fromRGB(0, 255, 255),
    Background = Color3.fromRGB(0, 0, 0),
    Header = Color3.fromRGB(0, 0, 0),
    TextColor = Color3.fromRGB(255, 255, 255),
    ElementColor = Color3.fromRGB(20, 20, 20)
}

local colors = defaultColors

-- Create Main UI Window
local Window = Library.CreateLib("Universal Script Hub", colors)

-- Create Tabs
local MainTab = Window:NewTab("Main")
local ESPTab = Window:NewTab("ESP")
local BloxFruitsTab = Window:NewTab("BloxFruits")
local SettingsTab = Window:NewTab("Settings")

-- Create Sections
local MainSection = MainTab:NewSection("Main Features")
local ESPSection = ESPTab:NewSection("ESP Features")
local BloxFruitsSection = BloxFruitsTab:NewSection("BloxFruits Features")
local SettingsSection = SettingsTab:NewSection("Settings")

-- Variables
local mainUIVisible = true
local ESPEnabled = false
local AutoGKEnabled = false
local AutoFarmEnabled = false

-- ESP Feature
local function ToggleESP(state)
    ESPEnabled = state
    if ESPEnabled then
        print("ESP Enabled")
        -- Code for enabling ESP: Highlight players, parts, etc.
    else
        print("ESP Disabled")
        -- Code for disabling ESP
    end
end

ESPSection:NewToggle("Enable ESP", "Highlights all players and parts within range", function(state)
    ToggleESP(state)
end)

-- Function to determine quest giver and NPCs based on player's level
local function GetQuestInfo(level)
    local questGivers = workspace:FindFirstChild("QuestGivers") -- Find the folder by name
    if not questGivers then
        print("Warning: QuestGivers folder not found!")
        return
    end

    -- Assuming quest giver names are like "QuestGiver1", "QuestGiver2", etc.
    local questGiverName = "QuestGiver" .. math.floor(level / 50) + 1
    local questGiver = questGivers:FindFirstChild(questGiverName)

    -- Assuming NPC group names are like "NPCGroup1", "NPCGroup2", etc.
    local npcGroupName = "NPCGroup" .. math.floor(level / 50) + 1
    local questNPCs = workspace.NPCs:FindFirstChild(npcGroupName)

    return {
        questGiver = questGiver,
        questNPCs = questNPCs
    }
end

-- AutoFarm Feature with Quest Taking
local function AutoFarm()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local level = player.Data.Level.Value  -- Replace with actual path to player level

    local questInfo = GetQuestInfo(level)
    if not questInfo.questGiver or not questInfo.questNPCs then
        print("Quest giver or NPC group not found for this level.")
        return
    end

    -- Go to the quest giver
    character:MoveTo(questInfo.questGiver.HumanoidRootPart.Position)
    wait(1)

    -- Interact with quest giver to accept quest
    fireproximityprompt(questInfo.questGiver.DialoguePrompt)  -- Replace with actual proximity prompt if needed
    wait(1)

    while AutoFarmEnabled do
        wait(0.5) -- Small delay to prevent overwhelming the game

        -- Go to the quest NPCs
        for _, npc in pairs(questInfo.questNPCs:GetChildren()) do
            if npc:IsA("Model") and npc:FindFirstChild("Humanoid") and npc.Humanoid.Health > 0 then
                character:MoveTo(npc.HumanoidRootPart.Position)
                wait(0.3)  -- Wait briefly for teleport
                keypress(Enum.KeyCode.One) -- Press
