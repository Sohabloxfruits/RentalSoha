-- Load Kavo UI Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()

-- Define Colors for Custom Theme
local defaultColors = {
    SchemeColor = Color3.fromRGB(0, 255, 255),
    Background = Color3.fromRGB(0, 0, 0),
    Header = Color3.fromRGB(0, 0, 0),
    TextColor = Color3.fromRGB(255, 255, 255),
    ElementColor = Color3.fromRGB(20, 20, 20)
}

local colors = defaultColors

-- Create Main UI Window
local Window = Library.CreateLib("Universal Script Hub", colors)

-- Create Tabs
local MainTab = Window:NewTab("Main")
local ESPTab = Window:NewTab("ESP")
local BloxFruitsTab = Window:NewTab("BloxFruits")
local SettingsTab = Window:NewTab("Settings")

-- Create Sections
local MainSection = MainTab:NewSection("Main Features")
local ESPSection = ESPTab:NewSection("ESP Features")
local BloxFruitsSection = BloxFruitsTab:NewSection("BloxFruits Features")
local SettingsSection = SettingsTab:NewSection("Settings")

-- Variables
local AutoFarmEnabled = false
local mainUIVisible = true
local ESPEnabled = false

-- Function to Get Quest Information Based on Player Level
local function GetQuestInfo(level)
    if level < 50 then
        return {
            questGiver = workspace.QuestGivers:FindFirstChild("QuestGiver1"),
            questNPCs = workspace.NPCs:FindFirstChild("LowLevelNPCs")
        }
    elseif level < 100 then
        return {
            questGiver = workspace.QuestGivers:FindFirstChild("QuestGiver2"),
            questNPCs = workspace.NPCs:FindFirstChild("MidLevelNPCs")
        }
    else
        return {
            questGiver = workspace.QuestGivers:FindFirstChild("QuestGiver3"),
            questNPCs = workspace.NPCs:FindFirstChild("HighLevelNPCs")
        }
    end
end

-- Function to Interact with Quest Giver
local function InteractWithQuestGiver(questGiver)
    if questGiver and questGiver:FindFirstChild("DialoguePrompt") then
        fireproximityprompt(questGiver.DialoguePrompt)
        print("Interacting with quest giver to start quest")
    else
        print("Quest giver or DialoguePrompt not found")
    end
end

-- Function for AutoFarm
local function AutoFarm()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local level = player.Data.Level.Value  -- Adjust this path based on actual level location

    local questInfo = GetQuestInfo(level)
    if not questInfo.questGiver or not questInfo.questNPCs then
        print("Quest giver or NPC group not found for this level.")
        return
    end

    -- Move to Quest Giver and Interact
    character:MoveTo(questInfo.questGiver.HumanoidRootPart.Position)
    wait(1)
    InteractWithQuestGiver(questInfo.questGiver)
    wait(1)

    -- Move to each NPC in the quest group and attack
    while AutoFarmEnabled do
        wait(0.5)
        for _, npc in pairs(questInfo.questNPCs:GetChildren()) do
            if npc:IsA("Model") and npc:FindFirstChild("Humanoid") and npc.Humanoid.Health > 0 then
                print("Moving to NPC: " .. npc.Name)
                character:MoveTo(npc.HumanoidRootPart.Position)
                wait(0.3)
                keypress(Enum.KeyCode.One) -- Equip weapon
                wait(0.1)
                mouse1press() -- Start attacking
                wait(0.5)
                mouse1release() -- Stop attacking
                print("Attacked NPC: " .. npc.Name)
            end
        end
    end
end

-- Toggle for AutoFarm
BloxFruitsSection:NewToggle("Enable AutoFarm", "Automatically farms NPCs based on your level", function(state)
    AutoFarmEnabled = state
    if AutoFarmEnabled then
        print("AutoFarm enabled")
        AutoFarm()
    else
        print("AutoFarm disabled")
    end
end)

-- Teleport Tool
local function CreateTeleportTool()
    local tool = Instance.new("Tool")
    tool.RequiresHandle = false
    tool.Name = "TeleportTool"
    tool.Activated:Connect(function()
        local player = game.Players.LocalPlayer
        local mouse = player:GetMouse()
        if mouse.Target then
            local teleportPosition = mouse.Hit.p
            player.Character:MoveTo(teleportPosition)
            print("Teleported to: " .. tostring(teleportPosition))
        end
    end)
    tool.Parent = game.Players.LocalPlayer.Backpack
end

MainSection:NewButton("Equip Teleport Tool", "Click anywhere to teleport", function()
    CreateTeleportTool()
end)

-- Settings Features
SettingsSection:NewLabel("Credits")
SettingsSection:NewLabel("Script by: hamadlla")

SettingsSection:NewLabel("Customize Theme")
SettingsSection:NewColorPicker("Scheme Color", "Change the scheme color", colors.SchemeColor, function(color)
    colors.SchemeColor = color
end)

SettingsSection:NewColorPicker("Background Color", "Change the background color", colors.Background, function(color)
    colors.Background = color
end)

SettingsSection:NewColorPicker("Text Color", "Change the text color", colors.TextColor, function(color)
    colors.TextColor = color
end)

-- UI Toggle Button (Black Square)
local toggleButton = Instance.new("ScreenGui", game.Players.LocalPlayer:WaitForChild("PlayerGui"))
toggleButton.Name = "ToggleUIButton"

local buttonFrame = Instance.new("TextButton", toggleButton)
buttonFrame.Size = UDim2.new(0, 50, 0, 50)
buttonFrame.Position = UDim2.new(0, 10, 0, 10)
buttonFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
buttonFrame.Text = ""
buttonFrame.BorderSizePixel = 0

buttonFrame.MouseButton1Click:Connect(function()
    mainUIVisible = not mainUIVisible
    Library:ToggleUI()
end)

-- Continuously Update the Script
game:GetService("RunService").RenderStepped:Connect(function()
    if AutoFarmEnabled then
        AutoFarm()
    end
end)
